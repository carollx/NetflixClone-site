{"version":3,"sources":["Tmdb.js","components/MovieRow/index.js","components/FeaturedMovie/index.js","components/Header/index.js","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","results","slug","title","movies","tv","getMovieInfo","movieId","type","info","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","NavigateBefore","style","fontSize","listW","length","NavigateNext","marginLeft","width","map","item","key","src","poster_path","alt","original_title","firstDate","Date","first_air_date","genres","i","push","name","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","vote_average","getFullYear","number_of_seasons","overview","href","id","join","black","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","useEffect","loadAll","Tmdb","list","originals","filter","randomChosen","floor","random","chosen","chosenInfo","scrollListener","scrollY","addEventListener","removeEventListener","role","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd24283b.chunk.js","sourcesContent":["/* eslint-disable default-case */\r\n/* eslint-disable import/no-anonymous-default-export */\r\nconst API_KEY = 'c0150151da4ba3bb99008e2a5503d8e3';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\nconst basicFetch = async(endpoint) => {\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json;\r\n}\r\n\r\nexport default {\r\n    getHomeList: async() => {\r\n        return [\r\n            {\r\n                slug: 'originals',\r\n                title: 'Originais da Netflix',\r\n                movies: {results: 0},\r\n                tv: await basicFetch(`/discover/tv?with_networks=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para você',\r\n                movies: await basicFetch(`/discover/movie?language=pt-BR&with_watch_providers=8&watch_region=BR&sort_by=popularity.desc&primary_release_date.gte=2021-10-01&api_key=${API_KEY}`),\r\n                tv: await basicFetch(`/discover/tv?language=pt-BR&with_watch_providers=8&watch_region=BR&sort_by=popularity.desc&first_air_date.gte=2021-10-01&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: 'Em Alta',\r\n                movies: await basicFetch(`/discover/movie?language=pt-BR&with_watch_providers=8&watch_region=BR&sort_by=vote_count.desc&api_key=${API_KEY}`),\r\n                tv: await basicFetch(`/discover/tv?language=pt-BR&with_watch_providers=8&watch_region=BR&sort_by=vote_count.desc&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Ação',\r\n                movies: await basicFetch(`/discover/movie?language=pt-BR&with_watch_providers=8&watch_region=BR&sort_by=popularity.desc&with_genres=28&api_key=${API_KEY}`),\r\n                tv: await basicFetch(`/discover/tv?language=pt-BR&with_watch_providers=8&watch_region=BR&sort_by=popularity.desc&with_genres=10759&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                movies: await basicFetch(`/discover/movie?language=pt-BR&with_watch_providers=8&watch_region=BR&with_genres=35&sort_by=popularity.desc&api_key=${API_KEY}`), \r\n                tv: await basicFetch(`/discover/tv?language=pt-BR&with_watch_providers=8&watch_region=BR&with_genres=35&sort_by=popularity.desc&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'mystery',\r\n                title: 'Mistério',\r\n                movies: await basicFetch(`/discover/movie?language=pt-BR&with_watch_providers=8&watch_region=BR&with_genres=27|9648&sort_by=popularity.desc&api_key=${API_KEY}`),\r\n                tv: await basicFetch(`/discover/tv?language=pt-BR&with_watch_providers=8&watch_region=BR&with_genres=27|9648&sort_by=popularity.desc&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                movies: await basicFetch(`/discover/movie?language=pt-BR&with_watch_providers=8&watch_region=BR&with_genres=10749&sort_by=popularity.desc&api_key=${API_KEY}`),\r\n                tv: await basicFetch(`/discover/tv?language=pt-BR&with_watch_providers=8&watch_region=BR&with_genres=10749&sort_by=popularity.desc&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentários',\r\n                movies:await basicFetch(`/discover/movie?language=pt-BR&with_watch_providers=8&watch_region=BR&with_genres=99&sort_by=popularity.desc&api_key=${API_KEY}`),\r\n                tv:await basicFetch(`/discover/tv?language=pt-BR&with_watch_providers=8&watch_region=BR&with_genres=99&sort_by=popularity.desc&api_key=${API_KEY}`)\r\n            }\r\n        ]\r\n    },\r\n    getMovieInfo: async (movieId, type) => {\r\n        let info = {};\r\n\r\n        if(movieId){\r\n            switch (type) {\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?language=pt-br&api_key=${API_KEY}`);    \r\n                break;\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt-br&api_key=${API_KEY}`);  \r\n                break;\r\n                default:\r\n                    info = null;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return info;\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport './MovieRow.css';\r\nimport { NavigateBefore, NavigateNext } from '@material-ui/icons';\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default ({title, tv, movies}) => {\r\n    const [scrollX, setScrollX] = useState(0);\r\n\r\n    const handleLeftArrow = () => {\r\n        let x = scrollX + Math.round(window.innerWidth / 2);\r\n        if (x > 0) {\r\n            x = 0;\r\n        }\r\n        setScrollX(x);\r\n    }\r\n\r\n    const handleRightArrow = () => {\r\n        let x = scrollX - Math.round(window.innerWidth / 2);\r\n        let listW = movies.results.length * 150 * 2 || tv.results.length * 150\r\n        if ((window.innerWidth - listW) > x) {\r\n            x = (window.innerWidth - listW) - 60;\r\n        }\r\n        setScrollX(x);\r\n    }\r\n\r\n    return (\r\n        <div className=\"movieRow\">\r\n            <h2>{title}</h2>\r\n            <div className=\"movieRow--left\" onClick={handleLeftArrow}>\r\n                <NavigateBefore style={{fontSize: 50}} />\r\n            </div>\r\n            <div className=\"movieRow--right\" onClick={handleRightArrow}>\r\n                <NavigateNext style={{fontSize: 50}}/>\r\n            </div>\r\n            <div className=\"movieRow--listArea\">\r\n                <div className=\"movieRow--list\" style={{\r\n                    marginLeft: scrollX,\r\n                    width: movies.results.length * 250 * 2 || tv.results.length * 250\r\n                }}>\r\n                    {tv.results.length > 0 && tv.results.map((item, key)=>(\r\n                        <div key={key} className=\"movieRow--item\">\r\n                            <img src={`http://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title}/>\r\n                        </div>\r\n                        \r\n                    ))}\r\n                    {movies.results.length > 0 && movies.results.map((item, key)=>(\r\n                        <div key={key} className=\"movieRow--item\">\r\n                            <img src={`http://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","/* eslint-disable import/no-anonymous-default-export */\r\nimport React from \"react\";\r\nimport './FeaturedMovie.css';\r\n\r\nexport default ({item}) => {\r\n\r\n    let firstDate = new Date(item.first_air_date);\r\n    let genres = [];\r\n\r\n    for(let i in item.genres){\r\n        genres.push(item.genres[i].name);\r\n    }\r\n\r\n    return (\r\n        <section className=\"featured\" style={{\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n        }}>\r\n            <div className=\"featured--vertical\">\r\n                <div className=\"featured--horizontal\">\r\n                    <div className=\"featured--name\">{item.name}</div>\r\n                    <div className=\"featured--info\">\r\n                        <div className=\"featured--points\">{item.vote_average} pontos</div>\r\n                        <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n                        <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\r\n                    </div>\r\n                    <div className=\"featured--description\">{item.overview}</div>\r\n                    <div className=\"featured--buttons\">\r\n                        <a href={`/watch/${item.id}`} className=\"featured--watchbutton\">▶ Assistir</a>\r\n                        <a href={`/list/add/${item.id}`} className=\"featured--mylistbutton\">+ Minha Lista</a>\r\n                    </div>\r\n                    <div className=\"featured--genres\"><strong>Gêneros:</strong> {genres.join(\", \")}</div>\r\n               </div>\r\n            </div>            \r\n        </section>\r\n    )\r\n}","/* eslint-disable import/no-anonymous-default-export */\r\nimport React from \"react\";\r\nimport './Header.css';\r\n\r\nexport default ({black}) => {\r\n    return (\r\n        <header className={black ? 'black' : ''}>\r\n            <div className=\"header--logo\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" alt=\"Netflix logo\" />\r\n                </a>\r\n            </div>\r\n            <div className=\"header--user\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://i.imgur.com/ht2hiNi.png\" alt=\"Usuário\" />\r\n                </a>\r\n            </div>\r\n        </header>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport Tmdb from './Tmdb';\r\nimport MovieRow from './components/MovieRow';\r\nimport FeaturedMovie from './components/FeaturedMovie';\r\nimport Header from './components/Header';\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default () => {\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [featuredData, setFeaturedData] = useState(null);\r\n  const [blackHeader, setBlackHeader] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loadAll = async () => {\r\n      let list = await Tmdb.getHomeList();\r\n      setMovieList(list);\r\n\r\n      let originals = list.filter(i=>i.slug === \"originals\");\r\n      let randomChosen = Math.floor(Math.random() * (originals[0].tv.results.length - 1));\r\n      let chosen = originals[0].tv.results[randomChosen];\r\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\r\n\r\n      setFeaturedData(chosenInfo);\r\n    }\r\n\r\n    loadAll();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const scrollListener = () => {\r\n      if (window.scrollY > 10) {\r\n        setBlackHeader(true);\r\n      } else {\r\n        setBlackHeader(false);\r\n      }\r\n    }\r\n\r\n    window.addEventListener('scroll', scrollListener);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', scrollListener);\r\n    }\r\n  }, []);\r\n\r\n  return(\r\n    <div className=\"page\">\r\n\r\n      <Header black={blackHeader} />\r\n\r\n      {featuredData && \r\n        <FeaturedMovie item={featuredData} />\r\n      }\r\n\r\n      <section className=\"lists\">\r\n        {movieList.map((item, key) => (\r\n          <MovieRow key={key} title={item.title} tv={item.tv} movies={item.movies}/>\r\n        ))}\r\n      </section>\r\n\r\n      <footer>\r\n          Feito com <span role=\"img\" aria-label=\"coração\">💖</span> pela B7Web <br/>\r\n          Direitos de imagem para a Netflix <br/>\r\n          Dados pegos pelo site TheMoviedb.org\r\n      </footer>\r\n\r\n      {movieList.length <= 0 &&\r\n        <div className=\"loading\">\r\n          <img src=\"https://media.wired.com/photos/592744d3f3e2356fd800bf00/master/w_900%2Cc_limit/Netflix_LoadTime.gif\" alt=\"Carregando\"/>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}